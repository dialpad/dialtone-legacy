import{D as i}from"./DialtoneUsage.4da26625.js";import{_ as u,o as k,c as r,b as s,w as t,a,d as n,e as l,r as o}from"./app.7464566a.js";const d=a("a",{href:"#",class:"d-link"},"Base link",-1),h=n(),_=a("h2",{id:"usage",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#"),n(" Usage")],-1),g=n(),m=a("code",null,"button",-1),q=n(" and link ("),f=a("code",null,"<a>",-1),b=n(") HTML elements each describe a specific intent. Understanding the distinction is important: if it goes somewhere, use a Link. If an action occurs, use a "),v=n("Button"),x=n("."),y=n(),w=a("ul",null,[a("li",null,"Navigating between destinations.")],-1),B=n("Actions, instead use a "),U=n("Button"),N=n("."),V=l(' <h3>Best practices</h3> <ul><li>Use useful, actionable, and descriptive text clearly conveying the hyperlink\u2019s destination. For example, a generic label like &quot;click here&quot; doesn\u2019t convey its target content.</li> <li>Too many links can be overwhelming. Be selective about the number of links in a context.</li> <li>Clearly identify links that target an external source.</li></ul> <h2 id="accessibility" tabindex="-1"><a class="header-anchor" href="#accessibility" aria-hidden="true">#</a> Accessibility</h2> <ul><li>Allow keyboard navigation. Users must be able to navigate between links, i.e. keypress of tab, and activate it by pressing \u2018Enter\u2019.</li> <li>Users must be able to identify links without relying on color alone.</li> <li>Users must be able to activate hover and focus states with both a mouse and a keyboard.</li></ul> <h2 id="variants-and-examples" tabindex="-1"><a class="header-anchor" href="#variants-and-examples" aria-hidden="true">#</a> Variants and Examples</h2> ',11),C=a("a",{href:"#",class:"d-link"},"Base link",-1),L=n(),A=a("a",{href:"#",class:"d-link d-link--danger"},"Danger link",-1),D=n(),E=a("a",{href:"#",class:"d-link d-link--muted"},"Muted link",-1),T=n(),I=a("a",{href:"#",class:"d-link d-link--success"},"Success link",-1),M=n(),R=a("a",{href:"#",class:"d-link d-link--warning"},"Warning link",-1),S=l(` <div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link d-link--danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link d-link--muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link d-link--success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link d-link--warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),F=a("a",{href:"#",class:"d-link d-link--inverted"},"Inverted base link",-1),H=l(` <div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-link d-link--inverted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h2> `,4),W={__name:"link.html",setup(j){return(z,G)=>{const e=o("code-well-header"),p=o("RouterLink"),c=o("component-class-table");return k(),r("div",null,[s(e,null,{default:t(()=>[d]),_:1}),h,_,g,a("p",null,[m,q,f,b,s(p,{to:"/components/button.html"},{default:t(()=>[v]),_:1}),x]),y,s(i,null,{do:t(()=>[w]),dont:t(()=>[a("ul",null,[a("li",null,[B,s(p,{to:"/components/button.html"},{default:t(()=>[U]),_:1}),N])])]),_:1}),V,s(e,null,{default:t(()=>[C,L,A,D,E,T,I,M,R]),_:1}),S,s(e,{bgclass:"d-bgc-black-800"},{default:t(()=>[F]),_:1}),H,s(c,{"component-name":"link"})])}}};var O=u(W,[["__file","link.html.vue"]]);export{O as default};
