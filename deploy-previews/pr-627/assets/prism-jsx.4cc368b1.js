(function(a){var l=a.util.clone(a.languages.javascript),f=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,o=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,u=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function c(e,t){return e=e.replace(/<S>/g,function(){return f}).replace(/<BRACES>/g,function(){return o}).replace(/<SPREAD>/g,function(){return u}),RegExp(e,t)}u=c(u).source,a.languages.jsx=a.languages.extend("markup",l),a.languages.jsx.tag.pattern=c(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),a.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,a.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,a.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,a.languages.jsx.tag.inside.comment=l.comment,a.languages.insertBefore("inside","attr-name",{spread:{pattern:c(/<SPREAD>/.source),inside:a.languages.jsx}},a.languages.jsx.tag),a.languages.insertBefore("inside","special-attr",{script:{pattern:c(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:a.languages.jsx}}},a.languages.jsx.tag);var s=function(e){return e?typeof e=="string"?e:typeof e.content=="string"?e.content:e.content.map(s).join(""):""},p=function(e){for(var t=[],g=0;g<e.length;g++){var n=e[g],i=!1;if(typeof n!="string"&&(n.type==="tag"&&n.content[0]&&n.content[0].type==="tag"?n.content[0].content[0].content==="</"?t.length>0&&t[t.length-1].tagName===s(n.content[0].content[1])&&t.pop():n.content[n.content.length-1].content==="/>"||t.push({tagName:s(n.content[0].content[1]),openedBraces:0}):t.length>0&&n.type==="punctuation"&&n.content==="{"?t[t.length-1].openedBraces++:t.length>0&&t[t.length-1].openedBraces>0&&n.type==="punctuation"&&n.content==="}"?t[t.length-1].openedBraces--:i=!0),(i||typeof n=="string")&&t.length>0&&t[t.length-1].openedBraces===0){var r=s(n);g<e.length-1&&(typeof e[g+1]=="string"||e[g+1].type==="plain-text")&&(r+=s(e[g+1]),e.splice(g+1,1)),g>0&&(typeof e[g-1]=="string"||e[g-1].type==="plain-text")&&(r=s(e[g-1])+r,e.splice(g-1,1),g--),e[g]=new a.Token("plain-text",r,null,r)}n.content&&typeof n.content!="string"&&p(n.content)}};a.hooks.add("after-tokenize",function(e){e.language!=="jsx"&&e.language!=="tsx"||p(e.tokens)})})(Prism);
