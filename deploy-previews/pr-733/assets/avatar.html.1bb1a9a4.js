import{_ as v,r as p,o as l,c,d as n,w as e,a,b as s,e as o,F as k,f as g,n as m,u as h}from"./app.54975367.js";import _ from"./IconGroup.abac40ed.js";import{colors as f}from"./avatar.fd7bbb5f.js";var i="/deploy-previews/pr-733/assets/images/person.png";const b=s("div",{class:"d-avatar d-avatar--md d-avatar--icon d-avatar--purple-500"},[s("img",{src:i,alt:""})],-1),q=s("h2",{id:"variants-and-examples",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#variants-and-examples","aria-hidden":"true"},"#"),a(" Variants and examples")],-1),x=s("h3",null,"Icons",-1),w={class:"d-avatar d-avatar--md d-avatar--icon d-avatar--purple-500"},y=o(`<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--icon d-avatar--purple-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>Images</h3>`,2),P=s("div",{class:"d-avatar d-avatar--md d-avatar--icon d-avatar--purple-500"},[s("img",{src:i,alt:""})],-1),D=o(`<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--{$size}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/path/to/image<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>Initials</h3>`,2),I={class:"d-w100p d-fl-col4 d-flg4 d-fw-wrap d-jc-space-between"},A={class:"d-d-fl d-fl-center d-mb8"},C=o(`<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--initials d-avatar--{$color} ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>Sizes</h3>`,2),V=s("div",{class:"d-d-inline-flex d-ai-center d-flow8"},[s("div",{class:"d-avatar d-avatar--sm d-avatar--purple-500 d-avatar--initials d-mb8"},"DP"),a(),s("div",{class:"d-avatar d-avatar--md d-avatar--purple-500 d-avatar--initials d-mb8"},"DP"),a(),s("div",{class:"d-avatar d-avatar--lg d-avatar--purple-500 d-avatar--initials d-mb8"},"DP")],-1),N=o(`<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--sm ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--md ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-avatar d-avatar--lg ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h2>`,2),z=s("h2",{id:"accessibility",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#accessibility","aria-hidden":"true"},"#"),a(" Accessibility")],-1),B=s("p",null,"Initial avatars' background and font color combinations have been paired to ensure minimum contrast is met.",-1),E=s("p",null,`When it comes to voiceover, avatars accompanying a label should generally be considered decorative and shouldn't be
focusable or read out. An example is a user's avatar next to their name.`,-1),L={href:"https://www.w3.org/WAI/tutorials/images/decorative",target:"_blank",rel:"noopener noreferrer"},W={__name:"avatar.html",setup(F){return(G,S)=>{const t=p("code-well-header"),r=p("component-class-table"),u=p("ExternalLinkIcon");return l(),c("div",null,[n(t,null,{default:e(()=>[b]),_:1}),a(),q,a(),x,a(),n(t,null,{default:e(()=>[s("div",w,[n(_)])]),_:1}),a(),y,a(),n(t,null,{default:e(()=>[P]),_:1}),a(),D,a(),n(t,null,{default:e(()=>[s("div",I,[(l(!0),c(k,null,g(h(f),d=>(l(),c("div",A,[s("div",{class:m(["d-avatar d-avatar--md d-avatar--initials",d])},"DP",2)]))),256))])]),_:1}),a(),C,a(),n(t,null,{default:e(()=>[V]),_:1}),a(),N,a(),n(r,{"component-name":"avatar"}),a(),z,a(),B,a(),E,a(),s("p",null,[a(`Avatars unaccompanied by labels, especially those representing functionality or navigation, should be focusable and
readout in voiceover. Please refer
to `),s("a",L,[a("WCAG"),n(u)]),a(` references for
your specific usage.`)])])}}};var H=v(W,[["__file","avatar.html.vue"]]);export{H as default};
