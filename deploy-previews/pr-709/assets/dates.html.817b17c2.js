import{D as t}from"./DialtoneUsage.46e51423.js";import{_ as n,o as r,c as s,b as i,w as a,e as o,a as e,d}from"./app.f3784c85.js";const l=o('<p>When deciding which format to use, consider how much information users need in the context of their journey.</p> <p>When written out, dates are represented in this order <strong>[Day of week], [Month] [Date], [Year]</strong>.</p> <ul><li>Don\u2019t use ordinal numbers (1st, 2nd, 3rd, 4th, etc.)</li> <li>Use commas to separate the day of the week, month and numerical day, and year.</li> <li>Include all 4 digits for the year</li></ul> <h2 id="formats-by-length" tabindex="-1"><a class="header-anchor" href="#formats-by-length" aria-hidden="true">#</a> Formats by length</h2> <dl class="dialtone-definition"><dt>Long date</dt> <dd>Thursday, September 2, 2022</dd> <dt>Medium date</dt> <dd>September 2, 2022</dd> <dt>Short date</dt> <dd>Thu, Sep 2, 2022</dd> <dd>Sep 2, 2022</dd> <dt>If you need to leave out the year</dt> <dd>September 2</dd> <dd>Sep 2</dd></dl> <h2 id="abbreviating-dates" tabindex="-1"><a class="header-anchor" href="#abbreviating-dates" aria-hidden="true">#</a> Abbreviating dates</h2> <p>If space isn\u2019t an issue, spell out the full day of the week and month. When space is constrained, abbreviate days of the week and months.</p> <dl class="dialtone-definition"><dt>Abbreviated days of the week</dt> <dd>Monday - Mon</dd> <dd>Tuesday - Tue</dd> <dd>Wednesday - Wed</dd> <dd>Thursday - Thu</dd> <dd>Friday - Fri</dd> <dd>Saturday - Sat</dd> <dd>Sunday - Sun</dd></dl> <dl class="dialtone-definition"><dt>Abbreviated months</dt> <dd>January - Jan</dd> <dd>February - Feb</dd> <dd>March - Mar</dd> <dd>April - Apr</dd> <dd>May</dd> <dd>June - Jun</dd> <dd>July - Jul</dd> <dd>August - Aug</dd> <dd>September - Sep</dd> <dd>October - Oct</dd> <dd>November - Nov</dd> <dd>December - Dec</dd></dl> <h2 id="date-and-time" tabindex="-1"><a class="header-anchor" href="#date-and-time" aria-hidden="true">#</a> Date and time</h2> <p>To represent a date and time, use <strong>[Day of week], [Month] [Date], [Year] at HH:MM:SS AM/PM</strong>:</p> <dl class="dialtone-definition"><dt>Examples</dt> <dd>Thursday, September 2, 2022 at 12:45 PM</dd> <dd>September 2 at 12:45 PM</dd> <dd>Sep 2 at 12:45 PM</dd></dl> <h2 id="numerical-dates" tabindex="-1"><a class="header-anchor" href="#numerical-dates" aria-hidden="true">#</a> Numerical Dates</h2> <p>Avoid writing dates numerically to avoid confusion. Different countries use different formats for this scenario, and we don\u2019t yet localize dates and times.</p> <p>For cases when dates are represented in a table or in extremely compact UIs, use <strong>MM/DD/YY</strong>.</p> <dl class="dialtone-definition"><dt>Examples</dt> <dd>09/02/22</dd></dl> <h2 id="usage-examples" tabindex="-1"><a class="header-anchor" href="#usage-examples" aria-hidden="true">#</a> Usage Examples</h2> ',34),h=e("ul",null,[e("li",null,"November 2"),d(),e("li",null,"November 2, 2022"),d(),e("li",null,"11/02/22")],-1),u=e("ul",null,[e("li",null,"November 2nd"),d(),e("li",null,"November 2 2022"),d(),e("li",null,"11022022")],-1),c={__name:"dates.html",setup(m){return(p,b)=>(r(),s("div",null,[l,i(t,null,{do:a(()=>[h]),dont:a(()=>[u]),_:1})]))}};var g=n(c,[["__file","dates.html.vue"]]);export{g as default};
