{
  "columns": [
    {
      "col": "1",
      "output": "8.333%"
    },
    {
      "col": "2",
      "output": "16.667%"
    },
    {
      "col": "3",
      "output": "25%"
    },
    {
      "col": "4",
      "output": "33.333%"
    },
    {
      "col": "5",
      "output": "41.667%"
    },
    {
      "col": "6",
      "output": "50%"
    },
    {
      "col": "7",
      "output": "58.333%"
    },
    {
      "col": "8",
      "output": "66.667%"
    },
    {
      "col": "9",
      "output": "75%"
    },
    {
      "col": "10",
      "output": "83.333%"
    },
    {
      "col": "11",
      "output": "91.667%"
    },
    {
      "col": "12",
      "output": "100%"
    }
  ],
  "properties": [
    {
      "class": "flex",
      "values": [0, 1, 2, 3, 4, 5],
      "description": "Set an item's flex-basis to auto and flex-grow and flex-shrink values to"
    },
    {
      "class": "fl-grow",
      "values": [0, 1, 2, 3, 4, 5],
      "description": "Set an item's flex grow property to"
    },
    {
      "class": "fl-shrink",
      "values": [0, 1, 2, 3, 4, 5],
      "description": "Set an item's flex shrink property to"
    }
  ],
  "order": [
    {
      "class": ".d-fo-first",
      "output": "order: -1;",
      "description": "Sets the flex item's position to first."
    },
    {
      "class": ".d-fo-last",
      "output": "order: 1;",
      "description": "Sets the flex item's position to last."
    }
  ],
  "justify-content": [
    {
      "class": "jc-flex-start",
      "output": "justify-content: flex-start",
      "description": "Items are packed from the start of the flex-direction."
    },
    {
      "class": "jc-flex-end",
      "output": "justify-content: flex-end",
      "description": "Items are packed from the end of the flex-direction."
    },
    {
      "class": "jc-center",
      "output": "justify-content: center",
      "description": "Items are packed around the center of the flex-direction."
    },
    {
      "class": "jc-space-around",
      "output": "justify-content: space-around",
      "description": "Items are evenly distributed within the container along the main axis. The spacing between adjacent items are the same. The empty space before the first item and after the last is half the space of adjacent items."
    },
    {
      "class": "jc-space-between",
      "output": "justify-content: space-between",
      "description": "Items are evenly distributed within the container along the main axis. The spacing between adjacent items are the same. The first and last items are flush with the main-start and main-end edges, respectively."
    },
    {
      "class": "jc-space-evenly",
      "output": "justify-content: space-evenly",
      "description": "Items are evenly distributed within the container along the main axis. The spacing between adjacent items, before the first item, and after the last item is the same."
    },
    {
      "class": "jc-baseline",
      "output": "justify-content: baseline",
      "description": "Items are placed along the flex container's baseline alignment."
    },
    {
      "class": "jc-normal",
      "output": "justify-content: normal",
      "description": "Items are distributed in their default position as if no justify-content has been applied. In flex containers this behaves as stretch."
    },
    {
      "class": "jc-unset",
      "output": "justify-content: unset",
      "description": "Resets the justify-content to its initial value."
    }
  ],
  "alignContent": [
    {
      "class": "ac-flex-start",
      "output": "align-content: flex-start",
      "description": "Items are packed from the start of the cross-axis."
    },
    {
      "class": "ac-flex-end",
      "output": "align-content: flex-end",
      "description": "Items are packed from the end of the cross-axis."
    },
    {
      "class": "ac-center",
      "output": "align-content: center",
      "description": "Items are packed from the center of the cross-axis."
    },
    {
      "class": "ac-space-around",
      "output": "align-content: space-around",
      "description": "Items are evenly distributed within the container along the cross axis. The spacing between adjacent items are the same. The empty space before the first item and after the last is half the space of adjacent items."
    },
    {
      "class": "ac-space-between",
      "output": "align-content: space-between",
      "description": "Items are evenly distributed within the container along the cross axis. The spacing between adjacent items are the same. The first and last items are flush with the main-start and main-end edges, respectively."
    },
    {
      "class": "ac-space-evenly",
      "output": "align-content: space-evenly",
      "description": "Items are evenly distributed within the container along the cross axis. The spacing between adjacent items, before the first item, and after the last item is the same."
    },
    {
      "class": "ac-baseline",
      "output": "align-content: baseline",
      "description": "Items are placed along the flex container's baseline alignment."
    },
    {
      "class": "ac-stretch",
      "output": "align-content: stretch",
      "description": "Items are stretched to fill the container space."
    },
    {
      "class": "ac-normal",
      "output": "align-content: normal",
      "description": "Items are distributed in their default position as if no align-content has been applied."
    },
    {
      "class": "ac-unset",
      "output": "align-content: unset",
      "description": "Resets the align-content to its initial value."
    }
  ],
  "alignItems": [
    {
      "class": "ai-flex-start",
      "output": "align-items: flex-start",
      "description": "Items are packed from the start of the cross-axis."
    },
    {
      "class": "ai-flex-end",
      "output": "align-items: flex-end",
      "description": "Items are packed from the end of the cross-axis."
    },
    {
      "class": "ai-center",
      "output": "align-items: center",
      "description": "Items are packed from the center of the cross-axis."
    },
    {
      "class": "ai-baseline",
      "output": "align-items: baseline",
      "description": "Items are placed along the flex container's baseline alignment."
    },
    {
      "class": "ai-stretch",
      "output": "align-items: stretch",
      "description": "Items are stretched along the cross-axis."
    },
    {
      "class": "ai-normal",
      "output": "align-items: normal",
      "description": "Items are distributed in their default position as if no align-items has been applied. In flex containers this behaves as stretch."
    },
    {
      "class": "ai-unset",
      "output": "align-items: unset",
      "description": "Resets the align-items to its initial value."
    }
  ],
  "alignSelf": [
    {
      "class": "as-flex-start",
      "output": "align-self: flex-start",
      "description": "Puts an item at the start of the cross-axis."
    },
    {
      "class": "as-flex-end",
      "output": "align-self: flex-end",
      "description": "Puts an item at the end of the cross-axis."
    },
    {
      "class": "as-center",
      "output": "align-self: center",
      "description": "Puts an item at the center of the cross-axis."
    },
    {
      "class": "as-baseline",
      "output": "align-self: baseline",
      "description": "Item is placed on the container's baseline alignment."
    },
    {
      "class": "as-stretch",
      "output": "align-self: stretch",
      "description": "Item is stretched along the cross-axis."
    },
    {
      "class": "as-normal",
      "output": "align-self: normal",
      "description": "Item is set in it's default position as if no align-self has been applied. In flex containers this behaves as stretch."
    },
    {
      "class": "as-auto",
      "output": "align-self: auto",
      "description": "Item is set to the parent's align-items value."
    },
    {
      "class": "as-unset",
      "output": "align-self: unset",
      "description": "Resets the align-self to its initial value."
    }
  ],
  "direction": [
    {
      "class": "fd-row",
      "output": "flex-direction: row",
      "description": "Sets the container's flex direction to row. This is the initial value."
    },
    {
      "class": "fd-row-reverse",
      "output": "flex-direction: row-reverse",
      "description": "Reverses the containers flex direction, but still in a row."
    },
    {
      "class": "fd-column",
      "output": "flex-direction: column",
      "description": "Sets the container's flex direction to a column."
    },
    {
      "class": "fd-column-reverse",
      "output": "flex-direction: column-reverse",
      "description": "Sets the container's flex direction to a column and reverses it."
    },
    {
      "class": "fd-unset",
      "output": "flex-direction: unset;",
      "description": "Resets the flex-direction value to its initial value (row)."
    }
  ],
  "wrap": [
    {
      "class": "fw-nowrap",
      "output": "flex-wrap: nowrap",
      "description": "Declares a container's objects should not wrap. This is the initial value."
    },
    {
      "class": "fw-wrap",
      "output": "flex-wrap: wrap",
      "description": "Declares a container's objects should wrap to another row or column (depending on the declared direction) based on content size."
    },
    {
      "class": "fw-wrap-reverse",
      "output": "flex-wrap: wrap-reverse",
      "description": "Reverses the wrap direction for container's objects, but on a row or column level. It does not re-order the content, but reverses the order of each row or column. More than one row or column must be present for this to visually apply."
    },
    {
      "class": "fw-unset",
      "output": "flex-wrap: unset;",
      "description": "Resets the flex-wrap value to its initial value (nowrap)."
    }
  ],
  "flow": [
    {
      "class": "ff-row-nowrap",
      "output": "flex-flow: row nowrap;",
      "description": "Sets the direction to row, but does not allow child items to wrap. This is the default flex-flow value."
    },
    {
      "class": "ff-row-wrap",
      "output": "flex-flow: row wrap;",
      "description": "Establishes the layout as horizontal rows that display left to right in `ltr` and wraps onto multiple lines top to bottom."
    },
    {
      "class": "ff-row-wrap-reverse",
      "output": "flex-flow: row wrap-reverse;",
      "description": "Sets the direction to row and reverses the order of each row."
    },
    {
      "class": "ff-row-reverse-nowrap",
      "output": "flex-flow: row-reverse nowrap;",
      "description": "Sets the direction to row, but reverses the order of all child items. Child items will not be allowed to wrap to another row."
    },
    {
      "class": "ff-row-reverse-wrap",
      "output": "flex-flow: row-reverse wrap;",
      "description": "Sets the direction to row, but reverses the order of all child items. Child items are allowed to wrap to another row."
    },
    {
      "class": "ff-row-reverse-wrap-reverse",
      "output": "flex-flow: row-reverse wrap-reverse;",
      "description": "Reverses both the overall order of all child elements as well as each row."
    },
    {
      "class": "ff-column-nowrap",
      "output": "flex-flow: column nowrap;",
      "description": "Sets the direction to column, but does not allow child items to wrap. This is the default flex-flow value."
    },
    {
      "class": "ff-column-wrap",
      "output": "flex-flow: column wrap;",
      "description": "Establishes the layout as horizontal columns that display top to bottom in `ltr` and wraps onto multiple columns left to right."
    },
    {
      "class": "ff-column-wrap-reverse",
      "output": "flex-flow: column wrap-reverse;",
      "description": "Sets the direction to column and reverses the order of each distinct columm. It does not reverse the overall order of child elements."
    },
    {
      "class": "ff-column-reverse-nowrap",
      "output": "flex-flow: column-reverse nowrap;",
      "description": "Sets the direction to column, but reverses the order of all child items. Child items will not be allowed to wrap to another column."
    },
    {
      "class": "ff-column-reverse-wrap",
      "output": "flex-flow: column-reverse wrap;",
      "description": "Sets the direction to column, but reverses the order of all child items. Child items are allowed to wrap to another column."
    },
    {
      "class": "ff-column-reverse-wrap-reverse",
      "output": "flex-flow: column-reverse wrap-reverse;",
      "description": "Reverses both the overall order of all child elements as well as each column."
    },
    {
      "class": "ff-unset",
      "output": "flex-flow: unset;",
      "description": "Resets the flex-flow value to its initial value (row nowrap)."
    }
  ]
}
